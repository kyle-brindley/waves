#! /usr/bin/env python

# Inherit the parent construction environment
Import("env")

pyproject = env.FindFile("pyproject.toml", "#")

flake8 = env.Command(
    target=["flake8.txt"],
    source=[".flake8"],
    action=["flake8 . $$(python find_shebang.py .) --jobs=4 --tee --output-file=${TARGET.abspath}"],
)
env.AlwaysBuild(flake8)
env.Alias("flake8", flake8)
env.Alias("style", flake8)

black_check = env.Command(
    target=["black-check.txt"],
    source=[pyproject],
    action=["black . $$(python find_shebang.py .) --check --verbose"],
)
env.AlwaysBuild(black_check)
env.Alias("black-check", black_check)
env.Alias("style", black_check)

# TODO: Remove custom python script if/when black supports magic file type searches
# https://github.com/psf/black/issues/491
black_format = env.Command(
    target=["black-format.txt"],
    source=[pyproject],
    action=["black . $$(python find_shebang.py .)"],
)
env.AlwaysBuild(black_format)
env.Alias("black-format", black_format)

ruff_check = env.Command(
    target=["ruff-check.txt"],
    source=[pyproject],
    action=["ruff check . && ruff format . --check"],
)
env.AlwaysBuild(ruff_check)
env.Alias("ruff-check", ruff_check)
env.Alias("style", ruff_check)
ruff_format = env.Command(
    target=["ruff-format.txt"],
    source=[pyproject],
    action=["ruff check . --fix; ruff format ."],
)
env.AlwaysBuild(ruff_format)
env.Alias("ruff-format", ruff_format)
