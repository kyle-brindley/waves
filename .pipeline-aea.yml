include: ".pipeline-common.yml"

stages:
  - environment
  - test
  - deploy

aea-environment:
  extends:
    - .linux-cached-environment
    - .environment
  stage: environment
  rules:
    - if: $CI_PIPELINE_SOURCE == "parent_pipeline"
  tags:
    - shell
    - aea
    - linux

aea-fast-test:
  extends:
    - .linux-cached-environment
    - .fast-test
  stage: test
  rules:
    - if: $PARENT_CI_PIPELINE_SOURCE == "schedule"
    - if: $PARENT_CI_PIPELINE_SOURCE == "merge_request_event"
  tags:
    - shell
    - aea
    - linux

aea-style-guide:
  extends:
    - .linux-cached-environment
    - .style-guide
  stage: test
  rules:
    - if: $PARENT_CI_PIPELINE_SOURCE == "schedule"
    - if: $PARENT_CI_PIPELINE_SOURCE == "merge_request_event"
  tags:
    - shell
    - aea
    - linux

aea-conda-build-internal:
  extends:
    - .nix-job-environment
    - .conda-build
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == "parent_pipeline"
  variables:
    conda_installation: "/apps/anaconda/3.12-anaconda-2024.10"
    environment_file: "conda-build.yml"
    recipe_directory: "recipe-internal"
  artifacts:
    expire_in: '2 hrs'
    paths:
      - conda-bld/noarch/waves-*-*.tar.bz2
  tags:
    - shell
    - aea
    - linux

aea-conda-build:
  extends:
    - .nix-job-environment
    - .conda-build
  stage: test
  rules:
    - if: $PARENT_CI_PIPELINE_SOURCE == "schedule"
    - if: $PARENT_CI_PIPELINE_SOURCE == "merge_request_event"
  variables:
    conda_installation: "/apps/anaconda/3.12-anaconda-2024.10"
    environment_file: "conda-build.yml"
    recipe_directory: "recipe"
  tags:
    - shell
    - aea
    - linux

aea-conda-build-matrix:
  extends:
    - .nix-job-environment
  stage: test
  rules:
    - if: $PARENT_CI_PIPELINE_SOURCE == "schedule"
  variables:
    conda_installation: "/apps/anaconda/3.12-anaconda-2024.10"
    environment_file: "conda-build.yml"
  script:
    # Override default permissions. Set group to rx with no write permissions.
    - umask 0022
    - mkdir ${conda_artifacts_directory}
    - pytest recipe-matrix/matrix.py -v --no-showlocals --tb=short
    - conda build purge --croot ${croot}/recipe-matrix
  tags:
    - shell
    - aea
    - linux
  timeout: 4h

# https://re-git.lanl.gov/aea/developer-operations/aea-conda
aea-conda-deploy:
  stage: deploy
  rules:
    - if: $PARENT_CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $PARENT_CI_COMMIT_BRANCH == "main"
  variables:
    PARENT_CI_PROJECT_PATH: $CI_PROJECT_PATH
    PARENT_CI_COMMIT_BRANCH: $PARENT_CI_COMMIT_BRANCH
    AEA_CONDA_PACKAGE_JOB: aea-conda-build-internal
    AEA_CONDA_PACKAGE_ARTIFACTS: conda-bld/noarch/waves-*-*.tar.bz2
  trigger:
    project: aea/developer-operations/aea-conda
    branch: main
    strategy: depend

aea-pip-build:
  extends:
    - .linux-cached-environment
    - .pip-build
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == "parent_pipeline"
  artifacts:
    expire_in: '2 hrs'
    paths:
      - build/dist/waves-*.tar.gz
      - build/dist/waves-*.whl
  tags:
    - shell
    - aea
    - linux

pypi-pip-build:
  extends:
    - .linux-cached-environment
    - .pip-build
  stage: test
  rules:
    - if: $PARENT_CI_PIPELINE_SOURCE == "schedule"
    - if: $PARENT_CI_PIPELINE_SOURCE == "merge_request_event"
  variables:
    distribution_name: "waves-workflows"
  tags:
    - shell
    - aea
    - linux

aea-pip-deploy:
  extends:
    - .linux-cached-environment
  stage: deploy
  rules:
    - if: $PARENT_CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $PARENT_CI_COMMIT_BRANCH == "main"
  script:
    # Only deploy to Gitlab PyPI registry for clean version tags
    - tag=$(git tag --points-at HEAD)
    - echo ${tag}
    - if [[ -z ${tag} ]]; then exit 0; fi
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi build/dist/*
  tags:
    - shell
    - aea
    - linux

release:
  extends:
    - .linux-cached-environment
  stage: deploy
  rules:
    - if: $PARENT_CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $PARENT_CI_COMMIT_BRANCH == "main"
  script:
    # Only create a release for clean version tags
    - tag=$(git tag --points-at HEAD)
    - echo ${tag}
    - if [[ -z ${tag} ]]; then exit 0; fi
    # Create the release notes. Assumes changelog contains section headers with version number in reverse chronological
    # order as:
    #
    # ```
    # *******************
    # 0.12.6 (2025-02-24)
    # *******************
    # ... 0.12.6 changelog content to include as release notes...
    # *******************
    # 0.12.5 (2025-01-27)
    # *******************
    # ```
    #
    # sed commands
    #
    # 1. print everything between current version and the previous version, excluding the versions
    # 2. strip the asterisk delimited section header bars
    # 3. replace the RST issue/merge custom directives with plain text
    - notes_file="notes.md"
    - sed -n '/^'"$tag"'/,/^[0-9]\+\.[0-9]\+\.[0-9]\+/{//!p}' docs/changelog.rst > ${notes_file}
    - sed -i '/^\*\+$/d' ${notes_file}
    - sed -i 's/:\([a-z]\+\):`\([0-9]\+\)`/\1 \2/g' ${notes_file}
    - cat ${notes_file}
    # Authenticate and create release with glab
    - glab auth login --job-token ${CI_JOB_TOKEN} --hostname ${CI_SERVER_HOST} --api-protocol ${CI_SERVER_PROTOCOL}
    - GITLAB_HOST=${CI_SERVER_URL} glab release create ${tag} -R ${CI_PROJECT_PATH} --ref ${CI_COMMIT_SHA} --notes-file ${notes_file} --no-update --no-close-milestone

  tags:
    - shell
    - aea
    - linux

# It MUST be called pages
pages:
  extends:
    - .linux-cached-environment
  stage: deploy
  rules:
    - if: $PARENT_CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $PARENT_CI_COMMIT_BRANCH == "main"
  script:
    - project_root=$PWD
    - rm -rf public && mkdir -p public/modsim-template
    # Ensure the ``_version.py`` file is created
    - scons html-internal --clean && scons html-internal --unconditional-build
    - scons pytest --clean && scons pytest
    - cp -r build/docs/html-internal/* public/
    - cp -r build/pytest/coverage public/coverage
    # Build modsim template documentation
    - cd waves/modsim_template
    - PYTHONPATH=${project_root} scons html
    - cp -r build/docs/html/* ${project_root}/public/modsim-template
  artifacts:
    paths:
      # It MUST be called public
      - public
  tags:
    - shell
    - aea
    - linux
