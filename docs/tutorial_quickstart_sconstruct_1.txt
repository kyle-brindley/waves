For this quickstart, we will not discuss the main SCons configuration file, named ``SConstruct``, in detail.
:ref:`tutorialsconstruct` has a more complete discussion about the contents of the ``SConstruct`` file.

One of the primary benefits to |PROJECT| is the ability to robustly integrate the conditional re-building behavior of a
build system with computational parameter studies. Because most build systems consist of exactly two steps:
configuration and execution, the full DAG must be fixed at configuration time. To avoid hardcoding the parameter study
tasks, it is desirable to re-use the existing workflow or task definitions. This could be accomplished with a simple
for-loop and naming convention; however, it is common to run a small, scoping parameter study prior to exploring the
full parameter space which would require careful set re-numbering to preserve previous work.

To avoid out-of-sync errors in parameter set definitions when updating a previously executed parameter study, |PROJECT|
provides a parameter study generator utility that uniquely identifies parameter sets by contents, assigns a unique index
to each parameter set, and guarantees that previously executed sets are matched to their unique identifier. When
expanding or re-executing a parameter study, |PROJECT| enforces set name/content consistency which in turn ensures that
the build system can correctly identify previous work and only re-build the new or changed sets.

In the configuration snippet below, the workflow parameterization is performed in the root configuration file,
``SConstruct``. This allows us to re-use the entire workflow file, ``SConscript``, with more than one parameter study.
First, we define a nominal workflow. Nominal workflows can be defined as a simple dictionary. This can be useful for
trouble-shooting the workflow, simulation definition, and simulation convergence prior to running a larger parameter
study. Second, we define a small mesh convergence study where the only parameter that changes is the mesh global seed.
