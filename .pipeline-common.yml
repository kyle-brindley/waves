.nix-job-environment: &nix-job-environment
  variables:
    GIT_STRATEGY: clone
    conda_installation: "/apps/anaconda/3.12-anaconda-2024.10"
    environment_file: "environment.yml"
    conda_artifacts_directory: "conda-bld"
  before_script:
    - function check_directory_variable () { echo "$1"; if [[ -z $1 ]] || [[ ! -d $1 ]]; then exit 1; fi; }
    - check_directory_variable "${conda_installation}"
    - echo ${environment_file}
    - if [[ -z ${environment_file} ]]; then exit 1; fi
    - echo ${conda_artifacts_directory}
    - if [[ -z ${conda_artifacts_directory} ]]; then exit 1; fi
    # Common job variables
    - prefix="$PWD/conda-environment"
    - conda_pkgs_dirs="$PWD/conda-pkgs"
    - echo ${prefix}
    - echo ${conda_pkgs_dirs}
    - if [[ -z ${prefix} ]]; then exit 1; fi
    - if [[ -z ${conda_pkgs_dirs} ]]; then exit 1; fi
    # Put texlive on PATH for AEA/HPC
    - module load texlive || true
    # Environment creation
    - export CONDA_PKGS_DIRS="${conda_pkgs_dirs}"
    - source ${conda_installation}/etc/profile.d/conda.sh
    - conda info
    - conda env create --prefix ${prefix} --file ${environment_file} --yes
    - conda activate ${prefix}
    - conda info
  after_script:
    - rm -r $PWD/conda-environment $PWD/conda-pkgs || true

.developer-test: &developer-test
  script:
    - function check_directory_variable () { echo "$1"; if [[ -z $1 ]] || [[ ! -d $1 ]]; then exit 1; fi; }
    - check_directory_variable "${abaqus_command_prefix}"
    - check_directory_variable "${cubit_command_prefix}"
    - echo ${PARENT_CI_PIPELINE_SOURCE}
    # Job commands
    - scons regression --keep-going --unconditional-build --abaqus-command=${abaqus_command_prefix}/abq2024 --cubit-command=${cubit_command_prefix}/Cubit-16.16/cubit
    - if [[ $PARENT_CI_PIPELINE_SOURCE == "schedule" ]]; then scons systemtest --keep-going --unconditional-build --abaqus-command=${abaqus_command_prefix}/abq2023 --cubit-command=${cubit_command_prefix}/Cubit-16.12/cubit; fi
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: build/pytest/coverage.xml

.developer-test-no-third-party: &developer-test-no-third-party
  script:
    - scons regression --keep-going
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: build/pytest/coverage.xml

.style-guide: &style-guide
  script:
    - scons style

.pip-build: &pip-build
  variables:
    distribution_name: "waves"
  script:
    # Job variables
    - distribution_filename=$(echo ${distribution_name} | tr - _)
    - scons pyproject.toml
    - version=$(python -m setuptools_scm)
    - echo ${distribution_name}
    - echo ${distribution_filename}
    - echo ${version}
    - if [[ -z ${distribution_name} ]]; then exit 1; fi
    - if [[ -z ${distribution_filename} ]]; then exit 1; fi
    - if [[ -z ${version} ]]; then exit 1; fi
    # Job commands
    # Conda CI environment active
    - scons build --distribution-name=${distribution_name}
    # FIXME: Find and fix the source of "zsh: killed" when executing "twine check" on macos
    # https://re-git.lanl.gov/aea/python-projects/waves/-/issues/932
    - if [[ $(uname) != "Darwin" ]]; then twine check build/dist/${distribution_filename}-${version}.tar.gz; fi
    - python -m venv pip-build-test
    # Python venv environment active
    - source pip-build-test/bin/activate
    - python -m pip install --verbose --disable-pip-version-check --require-virtualenv --no-cache-dir build/dist/${distribution_filename}-${version}.tar.gz pytest pytest-xdist
    - cd pip-build-test/lib/python*/site-packages/waves
    - python -m pytest -vvv -n 4 -m "not require_third_party and not sphinx"

.conda-build: &conda-build
  script:
    # Job variables
    - echo ${recipe_directory}
    - echo ${conda_artifacts_directory}
    - if [[ -z ${recipe_directory} ]]; then exit 1; fi
    - if [[ -z ${conda_artifacts_directory} ]]; then exit 1; fi
    # Job commands
    # Override default permissions. Set group to rx with no write permissions.
    - umask 0022
    - mkdir ${conda_artifacts_directory}
    - scons pyproject.toml
    - VERSION=$(python -m setuptools_scm) conda mambabuild ${recipe_directory} --channel fierromechanics --channel conda-forge --no-anaconda-upload --output-folder ${conda_artifacts_directory}
