.linux_before_script: &linux_before_script
  before_script:
    # Handle mixed AEA/HPC jobs
    - aea_compute_path="/projects/aea_compute"
    - scratch_path="/scratch/${USER}"
    - ci_environment_path="${aea_compute_path}"
    - abaqus_command_prefix="/apps/abaqus/Commands"
    - cubit_command_prefix="/apps"
    - hostname=$(hostname -f)
    # Handle HPC specific configuration
    - |
       if [[ ${hostname} == *.localdomain ]] || [[ ${hostname} == ??-rfe?.lanl.gov ]] || [[ ${hostname} == ??-fe?.lanl.gov ]]  || [[ "$hostname" == nid[0-9]* ]]; then
           aea_compute_path="/usr/projects/ea/aea_compute";
           scratch_path="/lustre/roscratch1/${USER}";
           ci_environment_path=${scratch_path};
           abaqus_command_prefix="/usr/projects/ea/abaqus/Commands"
           cubit_command_prefix="/usr/projects/ea/Cubit"
       fi
    - echo ${aea_compute_path}
    - echo ${scratch_path}
    - echo ${ci_environment_path}
    - echo ${abaqus_command_prefix}
    - echo ${cubit_command_prefix}
    - if [[ ! -d ${aea_compute_path} ]]; then exit 1; fi
    - if [[ ! -d ${scratch_path} ]]; then exit 1; fi
    - if [[ ! -d ${ci_environment_path} ]]; then exit 1; fi
    - if [[ ! -d ${abaqus_command_prefix} ]]; then exit 1; fi
    - if [[ ! -d ${cubit_command_prefix} ]]; then exit 1; fi
    # Prep module command and load system module(s)
    - aea_modulefiles="${aea_compute_path}/modulefiles"
    - module use ${aea_modulefiles}
    - module load texlive
    # Start with an AEA environment to put Conda on PATH
    - environment_choices="aea-nightly aea-quarterly aea-release"
    - for env in ${environment_choices}; do if [[ -d "${aea_compute_path}/${env}" ]]; then base_environment=${env}; break; fi; done
    - echo ${base_environment}
    - if [[ -z ${base_environment} ]]; then exit 1; fi
    - module load ${base_environment}
    # Activate CI environment if available. If not, rely on environment job running before other jobs.
    - module use ${PWD}/modulefiles
    - project_environment='waves-env'
    - environment_path="${ci_environment_path}/${project_environment}"
    - echo ${environment_path}
    - if [[ -d ${environment_path} ]]; then module unload ${base_environment}; module load ${project_environment}; fi
    - conda info
    - conda_artifacts_directory='conda-bld'
    - croot="${scratch_path}/$(basename $PWD)/${conda_artifacts_directory}"
    - echo ${conda_artifacts_directory}
    - echo ${croot}

.environment: &environment
  variables:
    GIT_STRATEGY: clone
  script:
    # Job variables
    - echo ${project_environment}
    - echo ${base_environment}
    - echo ${environment_path}
    - echo ${aea_modulefiles}
    - if [[ -z ${project_environment} ]]; then exit 1; fi
    - if [[ -z ${base_environment} ]]; then exit 1; fi
    - if [[ -z ${environment_path} ]]; then exit 1; fi
    - if [[ -z ${aea_modulefiles} ]]; then exit 1; fi
    - echo ${CI_MERGE_REQUEST_ID}
    - echo ${CI_COMMIT_BEFORE_SHA}
    - echo ${CI_COMMIT_BRANCH}
    # Always build from the base/aea compute environment with boa/libmamba
    - module unload ${project_environment}
    - module load ${base_environment}
    # Don't rebuild environment for merge request pipelines unless the environment is missing
    - if [[ -d "${environment_path}" ]]; then exists=true; else exists=false; fi
    - if [[ $CI_MERGE_REQUEST_ID ]] && ${exists}; then exit 0; fi
    # Don't rebuild environment for main unless the environment file has changed or the environment doesn't exist
    - files=$(git diff --name-only ${CI_COMMIT_SHA} ${CI_COMMIT_BEFORE_SHA}) || true
    - if [[ $CI_COMMIT_BRANCH == "main" ]]; then production=true; else production=false; fi
    - if [[ "${files}" == *"environment.yml"* ]]; then modified=true; else modified=false; fi
    - if ${production} && ${exists} && ! ${modified}; then exit 0; fi
    # Re-build the Conda environment on changes to environment files
    - conda env create --prefix ${environment_path} --file environment.yml --solver=libmamba --force
    # Remove write permissions from group to avoid accidental environment changes
    - chmod -R 755 ${environment_path}
    # place the common modulefiles in an accessible location
    - cp ${PWD}/modulefiles/* ${aea_modulefiles} || true

.fast-test: &fast-test
  variables:
    GIT_STRATEGY: clone
  script:
    # Job variables
    - echo ${abaqus_command_prefix}
    - echo ${cubit_command_prefix}
    - if [[ -z ${abaqus_command_prefix} ]]; then exit 1; fi
    - if [[ -z ${cubit_command_prefix} ]]; then exit 1; fi
    - echo ${PARENT_CI_PIPELINE_SOURCE}
    # Job commands
    - scons regression --keep-going --unconditional-build --abaqus-command=${abaqus_command_prefix}/abq2024 --cubit-command=${cubit_command_prefix}/Cubit-16.16/cubit
    - if [[ $PARENT_CI_PIPELINE_SOURCE == "schedule" ]]; then scons systemtest --keep-going --unconditional-build --abaqus-command=${abaqus_command_prefix}/abq2023 --cubit-command=${cubit_command_prefix}/Cubit-16.12/cubit; fi
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: build/pytest/coverage.xml

.fast-test-no-third-party: &fast-test-no-third-party
  variables:
    GIT_STRATEGY: clone
  script:
    - scons regression --keep-going
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: build/pytest/coverage.xml

.style-guide: &style-guide
  variables:
    GIT_STRATEGY: clone
  script:
    - scons flake8 black-check

.conda-build: &conda-build
  variables:
    GIT_STRATEGY: clone
  script:
    # Job variables
    - echo ${croot}
    - echo ${recipe_directory}
    - echo ${conda_artifacts_directory}
    - croot_recipe="${croot}/${recipe_directory}"
    - echo ${croot_recipe}
    - if [[ -z ${croot} ]]; then exit 1; fi
    - if [[ -z ${recipe_directory} ]]; then exit 1; fi
    - if [[ -z ${conda_artifacts_directory} ]]; then exit 1; fi
    - if [[ -z ${croot_recipe} ]]; then exit 1; fi
    # Job commands
    # Override default permissions. Set group to rx with no write permissions.
    - umask 0022
    - mkdir ${conda_artifacts_directory}
    - VERSION=$(python -m setuptools_scm) conda mambabuild ${recipe_directory} --channel fierromechanics --channel conda-forge --no-anaconda-upload --croot ${croot_recipe} --output-folder ${conda_artifacts_directory}
    - conda build purge --croot ${croot_recipe}
